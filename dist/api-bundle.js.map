{"version":3,"sources":["webpack:///webpack/bootstrap 5c8beb6b355d48ee4a90","webpack:///external \"rxjs/Rx\"","webpack:///./src/api/utils/index.ts","webpack:///./src/api/database/controllers/TokenController.ts","webpack:///./src/api/database/controllers/DeviceGroupController.ts","webpack:///external \"mongoose\"","webpack:///external \"firebase/messaging\"","webpack:///./src/api/custom-firebase/push-notification/device-group.ts","webpack:///./src/api/utils/saveToken.ts","webpack:///./src/api/custom-firebase/push-notification/topic.ts","webpack:///./src/api/custom-firebase/push-notification/utils.ts","webpack:///./src/api/utils/notificationKey.ts","webpack:///external \"isomorphic-fetch\"","webpack:///external \"bcrypt-nodejs\"","webpack:///external \"jsonwebtoken\"","webpack:///./src/api/utils/directMessage.ts","webpack:///./src/entry-api.ts","webpack:///./src/api/change-lang.ts","webpack:///./src/api/database/models/DeviceGroup.ts","webpack:///./src/api/database/models/Token.ts","webpack:///./src/api/utils/topicSubscription.ts","webpack:///external \"firebase/app\"","webpack:///./src/api/custom-firebase/index.ts","webpack:///external \"googleapis\"","webpack:///./src/api/database/controllers/UserController.ts","webpack:///./src/api/database/models/User.ts","webpack:///./src/api/device-group.ts","webpack:///./src/api/utils/sendDeviceGroup.ts","webpack:///./src/api/direct-message.ts","webpack:///./src/api/custom-firebase/push-notification/individual-device.ts","webpack:///external \"perf_hooks\"","webpack:///./src/api/topic-op.ts","webpack:///./src/api/utils/sendTopic.ts","webpack:///./src/api/token-op.ts","webpack:///./src/api/performance-test.ts","webpack:///external \"rxjs\"","webpack:///external \"fs\""],"names":[],"mappings":"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","file":"api-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5c8beb6b355d48ee4a90","module.exports = require(\"rxjs/Rx\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/Rx\"\n// module id = 0\n// module chunks = 0","import { Application, Request, Response, NextFunction } from 'express';\nimport { Observable } from 'rxjs/Rx';\n\nconst LangMap: {} = {\n  'zh-hk': 'zh_hk',\n  'en': 'en'\n}\n\nexport function getLangKey(lang: LangType): string {\n  return LangMap[lang];\n}\n\nexport function getDeviceGroupName(userId: string, lang: LangType): string {\n  return userId + '_' + getLangKey(lang);\n}\n\nexport function getBroadcastTopicName(lang: LangType): string {\n  return 'broadcast' + '__' + getLangKey(lang);\n}\n\n/**\n * Handles the Observable given and sends appropriate response\n * the message will be in device's chosen language\n * @param stream {Observable<any>} the Observable\n * @param req {Request} request\n * @param res {Response} response\n * @param next {Next} next\n */\nexport function handler(\n  stream: Observable<any>,\n  req: Request, res: Response, next: NextFunction): void {\n\n  const payload: Payload = {\n    status: 'success',\n    result: ''\n  };\n\n  stream.subscribe(\n    (result: {}) => { payload.result = result; },\n    (err: any) => {\n      payload.status = 'failure';\n      payload.result = err;\n      res.send(JSON.stringify(payload));\n    },\n    () => { res.send(JSON.stringify(payload)); }\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/utils/index.ts","import { Application, Request, Response, NextFunction } from 'express';\nimport Token from '../models/Token';\nimport { Observable, Observer } from 'rxjs/Rx';\n\nexport function saveTokenStream(data: TokenRecord) {\n  // const token = new Token({\n  //   userId: data.userId,\n  //   token: data.token,\n  //   lang: data.lang,\n  //   type: data.type\n  // });\n\n  // The upsert = true option creates the object if it doesn't exist. defaults to false.\n  // https://stackoverflow.com/questions/7267102/how-do-i-update-upsert-a-document-in-mongoose\n  const stream  = Observable.create((observer: Observer<any>) => {\n    Token.findOneAndUpdate({ token: data.token } , data, { upsert: true, new: true }, (err, existingToken) => {\n      if (err) { console.log(err); observer.error({ status: 'failure', msg: 'database error' }); }\n      observer.next({ status: 'success', msg: 'token saved', result: existingToken });\n      observer.complete();\n    });\n  })\n  .do((res: any) => {\n    console.info(`[TokenController/saveTokenStream]: token saved to database`);\n  });\n  return stream;\n};\n\nexport function queryTokenStream(token: string) {\n  const stream = Observable.create((observer: Observer<any>) => {\n    Token.findOne({ token }, (err, result) => {\n      if (err) { console.log(err); observer.error({ status: 'failure', msg: 'database error' }); }\n      observer.next(result);\n      observer.complete();\n    });\n  })\n  .do((res: any) => {\n    console.info(`[TokenController/queryTokenStream]: queried token`);\n  });\n  return stream;\n}\n\nexport function findTokensStream(userId: string) {\n  const stream = Observable.create((observer: Observer<any>) => {\n    Token.find({ userId }, (err, records) => {\n      if (err) { observer.error({ status: 'failure', msg: 'database error' }); }\n      if (records) {\n        observer.next(records);\n      } else {\n        observer.next([]);\n      }\n      observer.complete();\n    });\n  })\n  .do((res: any) => {\n    console.info(`[TokenController/findTokensStream]: found token`);\n  });\n  return stream;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/database/controllers/TokenController.ts","import { Application, Request, Response, NextFunction } from 'express';\nimport DeviceGroup from '../models/DeviceGroup';\nimport { Observable, Observer } from 'rxjs/Rx';\nimport { queryTokenStream } from './TokenController';\n\nexport function queryDeviceGroupStream(userId: string) {\n  return Observable.create((observer: Observer<any>) => {\n    DeviceGroup.find({ userId }, (err, result) => {\n      console.log('queryDeviceGroupStream');\n      if (err) { observer.error({ status: 'failure', msg: 'database error', err }); }\n      const itemsToBeSent = result.map((item) => ((<any>item).deviceGroup));\n      observer.next(itemsToBeSent);\n      observer.complete();\n    });\n  })\n  .do((res: any) => { console.info(`[queryDeviceGroupStream]: ${res}`); });\n}\n\nexport function queryTokenListFromDeviceGroupStream(deviceGroup: string) {\n  return Observable.create((observer: Observer<any>) => {\n    DeviceGroup.findOne({ deviceGroup }, (err, result) => {\n      console.log('queryTokenListFromDeviceGroupStream');\n      if (err) { observer.error({ status: 'failure', msg: 'database error', err }); }\n      if (result) {\n        observer.next((<any>result).tokens);\n      } else {\n        observer.next([]);\n      }\n      observer.complete();\n    });\n  })\n  .do((res: any) => { console.info(`[queryTokenListFromDeviceGroupStream]: list of tokens ${res}`); })\n  .flatMap((result) => {\n    if (result) {\n      const streams = result.map((item) => queryTokenStream(item));\n      return Observable.merge(...streams).reduce((acc: Array<any>, curr) => [...acc, curr], []);\n    }\n    return Observable.of([]);\n  })\n  .do((res: any) => {\n    console.info(`[queryTokenListFromDeviceGroupStream]: retrieved tokens info: `);\n    console.info(res);\n  });\n}\n\nexport function checkTokenFromDeviceGroupStream(token: string, deviceGroup: string) {\n  // query token list from device group, then verify if token exists\n  const stream = queryTokenListFromDeviceGroupStream(deviceGroup)\n    .flatMap((result: Array<string>) => {\n      console.log('in checkTokenFromDeviceGroupStream flatmap');\n      console.log(result);\n\n      if (result.length > 0) {\n        const arr = result.map((item: any) => item.token);\n        if (arr.indexOf(token) >= 0) {\n          return Observable.of({\n            deviceGroup,\n            found: true\n          });\n        } else {\n          return Observable.of({\n            deviceGroup,\n            found: false\n          });\n        }\n      } else {\n        return Observable.of({\n          deviceGroup,\n          found: false\n        });\n      }\n    })\n    .do((result: Array<string>) => {\n      console.info(`[checkTokenFromDeviceGroupStream]: tokenlist`);\n      console.info(result);\n    });\n  return stream;\n}\n\nexport function addTokenToDeviceGroupStream(data: DeviceGroupRecord) {\n  return Observable.create((observer: Observer<any>) => {\n    DeviceGroup.findOne({ deviceGroup: data.deviceGroup }, (err, existingGroup) => {\n      console.log('addTokenToDeviceGroupStream');\n      if (err) { observer.error({ status: 'failure', msg: 'database error', err }); }\n      let deviceGroupData: any;\n\n      console.log('existingGroup');\n      console.log(existingGroup);\n      if (existingGroup) {\n        // https://stackoverflow.com/questions/31775150/node-js-mongodb-the-immutable-field-id-was-found-to-have-been-altered\n        const newTokensArr = [...(<any>existingGroup).tokens, data.token]\n          .reduce((a,b) => {\n            if (a.indexOf(b) < 0 ) a.push(b);\n            return a;\n          },[]);\n\n        deviceGroupData = {\n          deviceGroup: (<any>existingGroup).deviceGroup,\n          userId: (<any>existingGroup).userId,\n          tokens: newTokensArr\n        };\n      } else {\n        deviceGroupData = {\n          deviceGroup: data.deviceGroup,\n          userId: data.userId,\n          tokens: [data.token]\n        };\n      }\n      DeviceGroup.findOneAndUpdate({ deviceGroup: data.deviceGroup }, deviceGroupData,\n          { upsert: true, new: true }, (err, existingGroup) => {\n        if (err) { observer.error({ status: 'failure', msg: 'database error', err }); }\n        observer.next({ status: 'success', msg: `token saved to device group ${data.deviceGroup}`, result: existingGroup });\n        observer.complete();\n      })\n    });\n  })\n  .do((res: any) => {\n    console.info(`[addTokenToDeviceGroupStream]: token saved to device group ${data.deviceGroup}`);\n  });\n}\n\nexport function removeTokenFromDeviceGroupStream(data: DeviceGroupRecord) {\n  return Observable.create((observer: Observer<any>) => {\n    DeviceGroup.findOne({ deviceGroup: data.deviceGroup }, (err, existingGroup) => {\n      console.log('removeTokenFromDeviceGroupStream');\n      console.log(existingGroup);\n      console.log(data.deviceGroup);\n      if (err) { observer.error({ status: 'failure', msg: 'database error', err }); }\n      if (!existingGroup) {\n        observer.error({ status: 'failure', msg: 'record not found' });\n      }\n\n      let deviceGroupData: any;\n      if ((<any>existingGroup).tokens.length === 1) {\n        // delete the record\n        DeviceGroup.remove({ deviceGroup: data.deviceGroup }, (err) => {\n          if (err) { observer.error({ status: 'failure', msg: 'database error', err }); }\n          observer.next({ status: 'success', msg: `token deleted from device group ${data.deviceGroup}` });\n          observer.complete();\n        });\n      } else {\n        deviceGroupData =  {\n          deviceGroup: (<any>existingGroup).deviceGroup,\n          userId: (<any>existingGroup).userId,\n          tokens: (<any>existingGroup).tokens.filter((item) => (item !== data.token))\n        };\n        DeviceGroup.findOneAndUpdate(\n            { deviceGroup: data.deviceGroup },\n            deviceGroupData,\n            { upsert: true, new: true }, (err, existingGroup) => {\n          if (err) { observer.error({ status: 'failure', msg: 'database error', err }); }\n          observer.next({ status: 'success', msg: `token deleted from device group ${data.deviceGroup}` });\n          observer.complete();\n        });\n      }\n    });\n  })\n  .do((res: any) => {\n    console.info(`[removeTokenFromDeviceGroupStream]: token saved to device group ${data.deviceGroup}`);\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/database/controllers/DeviceGroupController.ts","module.exports = require(\"mongoose\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mongoose\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"firebase/messaging\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"firebase/messaging\"\n// module id = 5\n// module chunks = 0","import 'firebase/messaging';\nimport * as fetch from 'isomorphic-fetch';\nimport * as utils from '../../utils';\n\n/**\n * Create notification key for a user's group\n * @param userId {string} user's user id\n * @param token {string} user's token for firebase\n * @param lang {string} chosen language ('en' or 'zh-hk')\n * @returns {Promise<any>} success/fail status\n * note that this needs at least one token to work\n * https://firebase.google.com/docs/cloud-messaging/js/device-group\n */\nasync function createNotificationKey(record: TokenRecord): Promise<any> {\n  console.info('[DeviceGroup/createNotificationKey]: createNotificationKey()');\n  console.info(record);\n\n  const { userId, token, lang }: Partial<TokenRecord> = record;\n  const langKey = utils.getLangKey(lang);\n  const notificationKey: any = await fetch('https://android.googleapis.com/gcm/notification', {\n    method: 'POST',\n    headers: new Headers({\n      'Content-Type': 'application/json',\n      'Authorization': `key=${process.env.FIREBASE_SERVER_KEY}`,\n      'project_id': process.env.FIREBASE_MESSAGING_SENDER_ID\n    }),\n    body: JSON.stringify({\n      'operation': 'create',\n      'notification_key_name': `${userId}_${langKey}`,\n      'registration_ids': [ token ]\n    })\n  })\n  .then((res) => res.json())\n  .catch((err: any) => {\n    console.error(`[DeviceGroup/createNotificationKey]: failed to create notification key: ${err}`);\n    throw new Error(err);\n  });\n\n  console.info(`[DeviceGroup/createNotificationKey]: notification key is: ${notificationKey}`);\n  return notificationKey['notification_key'];\n}\n\n/**\n * Retrieve user's notification key for their device group\n * @param userId {string} user's user id\n * @param lang {string} chosen language ('en' or 'zh-hk')\n * @returns {Promise<any>} retrieved data, undefined if record can't be found\n */\nexport async function retrieveNotificationKey(record: Partial<TokenRecord>): Promise<any> {\n  console.info('[DeviceGroup/retrieveNotificationKey]: retrieveNotificationKey()');\n  console.info(record);\n\n  const { userId, lang }: Partial<TokenRecord> = record;\n  const langKey = utils.getLangKey(lang);\n  const result: any = await fetch(`https://android.googleapis.com/gcm/notification?notification_key_name=${userId}_${langKey}`, {\n    method: 'GET',\n    headers: new Headers({\n      'Content-Type': 'application/json',\n      'Authorization': `key=${process.env.FIREBASE_SERVER_KEY}`,\n      'project_id': process.env.FIREBASE_MESSAGING_SENDER_ID\n    }),\n    body: JSON.stringify({})\n  })\n  .then((res) => res.json())\n  .then((res) => {\n    if (res.error) {\n      console.error(`[DeviceGroup/retrieveNotificationKey]: failed to retrieve notification key from userId ${userId}: ${res.error}`);\n      // throw new Error(res.error);\n      return undefined;\n    }\n    return res;\n  });\n\n  console.info(`[DeviceGroup/retrieveNotificationKey]: notification key is: ${result}`);\n  if (result) { return result['notification_key']; }\n  return false;\n}\n\n/**\n * Token operation to a user's device group\n * @param operator {string} add/remove\n * @param record {TokenRecord} record\n * @returns {Promise<any>} success/fail status\n */\nasync function tokenOp(operator: 'add' | 'remove', record: TokenRecord): Promise<any> {\n  console.info(`[DeviceGroup/tokenOp]: tokenOp(): ${operator}`);\n  console.info(record);\n\n  const { userId, token, lang, type }: Partial<TokenRecord> = record;\n  const langKey = utils.getLangKey(lang);\n  let notificationKey = await retrieveNotificationKey(record);\n  console.info(`[DeviceGroup/tokenOp]: trying to retrieve notificationkey: ${notificationKey}`);\n  if (!notificationKey) {\n    notificationKey = await createNotificationKey(record);\n  } else {\n    console.info(`[DeviceGroup/tokenOp]: ${operator}ing token to device group`);\n    notificationKey = await fetch('https://android.googleapis.com/gcm/notification', {\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': `key=${process.env.FIREBASE_SERVER_KEY}`,\n        'project_id': process.env.FIREBASE_MESSAGING_SENDER_ID\n      }),\n      body: JSON.stringify({\n        'operation': operator,\n        'notification_key_name': `${userId}_${langKey}`,\n        'notification_key': notificationKey,\n        'registration_ids': [ token ]\n      })\n    })\n    .then((res) => res.text())\n    .then((res) => {\n      console.info(`[DeviceGroup/tokenOp]: response is ${operator}`);\n      const response = JSON.parse(res);\n      if (response.error) {\n        console.error(`[DeviceGroup/retrieveNotificationKey]: failed to ${operator} token ${token} to notification key: ${notificationKey}`);\n        throw new Error(res);\n      }\n      return res;\n    });\n  }\n\n\n  // if (notificationKey) {\n  //   console.log('saving stuff to database');\n  //   const database = setupDatabase(getConfig());\n  //   const signInResult = await signIn(getConfig());\n  //   console.log('signed in');\n  //   // save to database\n  //   const newChildRef = database.ref(`deviceGroup/${userId}_${langKey}`).push();\n  //   // console.log(`new key is ${newChildRef.key}`)\n  //\n  //   // this should work too\n  //   // return newChildRef.set({ type, token });\n  //   console.log('saving stuff to database');\n  //   await database.ref(`deviceGroup/${userId}_${langKey}/${newChildRef.key}`).set({ type, token });\n  // }\n\n  return notificationKey;\n}\n\n/**\n * Add token to a user's device group\n * @param record {TokenRecord} record\n * @returns {Promise<any>} success/fail status\n */\nexport async function addToken(record: TokenRecord): Promise<any> {\n  return await tokenOp('add', record);\n}\n\n/**\n * Remove token from user's device group\n * @param record {TokenRecord} record\n * @returns {Promise<any>} retrieved data, undefined if record can't be found\n */\n export async function removeToken(record: TokenRecord): Promise<any> {\n   return await tokenOp('remove', record);\n }\n\n/**\n * Send push notification to a device group\n * @param type {TokenType} the type of the token according to platform\n * @param token {string} the token belong to that device\n * @param msg {FirebaseMsg} the message\n */\nexport async function sendNotification(notificationKey: string, msg: FirebaseMsg) {\n  console.info(`[DeviceGroup/sendNotification]: sendNotification()`);\n\n  const result = await fetch('https://fcm.googleapis.com/fcm/send', {\n    method: 'POST',\n    headers: new Headers({\n      'Content-Type': 'application/json',\n      'Authorization': `key=${process.env.FIREBASE_SERVER_KEY}`,\n      'project_id': process.env.FIREBASE_SERVER_KEY\n    }),\n    body: JSON.stringify({\n      to: notificationKey,\n      notification : msg,\n      // data : {\n      //   volume : '3.21.15',\n      //   contents : 'http://www.news-magazine.com/world-week/21659772'\n      // }\n    })\n  })\n  .then((res) => res.json())\n  .then((result) => {\n    if (result.error) {\n      console.error(`[DeviceGroup/sendNotification]: error: ${result.error}`);\n      throw new Error(result);\n    }\n    return result;\n  });\n  // .catch((err) => { console.error(err); return err; });\n  return result;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/custom-firebase/push-notification/device-group.ts","import { Observable } from 'rxjs/Rx';\n\nimport * as Token from '../database/controllers/TokenController';\nimport * as DeviceGroup from '../database/controllers/DeviceGroupController';\n\nimport * as utils from './index';\n\nimport { subscribeTopicStream, unsubscribeTopicStream } from './topicSubscription';\nimport { createNotificationKeyStream } from './notificationKey';\nimport * as pushNotification from '../custom-firebase/push-notification/device-group';\n\n/**\n * Create Observable for subscribing token to the `test` topic\n * and the broadcast topic for corresponding language\n * @param token {string} user's token\n * @param lang {LangType} user's chosen language\n * @returns {Observable} the Observable\n */\nexport function topicsSubscriptionStream(token: string, lang: LangType) {\n  const topicName = utils.getBroadcastTopicName(lang);\n\n  return Observable.merge(\n    subscribeTopicStream(token, 'test'),\n    subscribeTopicStream(token, topicName))\n    .last()\n    .do((res: any) => {\n      console.info(`[saveToken/topicsSubscriptionStream]: token subscribed to test and ${topicName}`);\n    });\n}\n\nexport function addTokenStream(record: TokenRecord) {\n  const { userId, token, lang }: Partial<TokenRecord> = record;\n  const deviceGroupName = utils.getDeviceGroupName(record.userId, record.lang);\n\n  // since token doesn't exist in database\n  // find notification key for the device group and save the token to Firebase\n  // save the token to MongoDB (both Token and DeviceGroup)\n  const saveTokenStream = Token.saveTokenStream(record)\n    .do((res: any) => {\n      console.info(`[saveToken/addTokenStream]: token saved to token database`);\n    });\n\n  const addTokenToDeviceGroupStream = DeviceGroup.addTokenToDeviceGroupStream({\n      deviceGroup: deviceGroupName,\n      userId: record.userId,\n      token: record.token\n    })\n    .do((res: any) => {\n      console.info(`[saveToken/addTokenStream]: token saved to device group database`);\n    });\n\n  return createNotificationKeyStream(record)\n    .flatMap((result: any) => Observable.merge(\n      saveTokenStream,\n      addTokenToDeviceGroupStream\n    ))\n    .last()\n    .flatMap((result: any) => topicsSubscriptionStream(token, lang));\n}\n\nexport function removeTokenStream(record: TokenRecord) {\n  const deviceGroupName = utils.getDeviceGroupName(record.userId, record.lang);\n  const topicName = utils.getBroadcastTopicName(record.lang);\n\n  return Observable\n    // remove token from the device group\n    .fromPromise(pushNotification.removeToken(record))\n    .flatMap((result: any) => unsubscribeTopicStream(record.token, topicName))\n    // remove token in the database\n    .flatMap((res: any) => DeviceGroup.removeTokenFromDeviceGroupStream({\n      deviceGroup: deviceGroupName,\n      userId: record.userId,\n      token: record.token\n    }));\n}\n\nexport default function saveTokenStream(record: TokenRecord) {\n  const { userId, token, lang }: Partial<TokenRecord> = record;\n\n  const stream = Token.queryTokenStream(token)\n    .do((res: any) => {\n      console.info(`[saveToken]: queried if token exists in database`);\n    })\n    .flatMap((res: any) => {\n      console.log(res);\n      if (!res || !res.hasOwnProperty('token')) { return addTokenStream(record); }\n      // token is found in MongoDb, see if need to change lang\n      return Observable.of(1); // dummy value indicating token is found in MongoDb\n    })\n    // .flatMap((result: any) => {\n    //   // for testing purpose\n    //   return Observable.fromPromise(topics.sendMsgToTopic({\n    //     body: 'qwerty',\n    //     title: 'qwerty'\n    //   }, 'test'));\n    // })\n    .do((res: any) => {\n      console.info(`[saveToken]: token updated/created`);\n    })\n    .map((result: any) => ({\n      status: 'success',\n      msg: 'successfully saved/created token'\n    }));\n  return stream;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/utils/saveToken.ts","import { getAccessTokenPromise } from './utils';\n\n\n// https://firebase.google.com/docs/cloud-messaging/js/topic-messaging\n\n/**\n * success => {}\n * fail => { error: '...' }\n */\nexport function subscribeTokenToTopic(token: string, topic: string) {\n  const url = `https://iid.googleapis.com/iid/v1/${token}/rel/topics/${topic}`;\n  const result = fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `key=${process.env.FIREBASE_SERVER_KEY}`\n    }\n  })\n  .then((res) => res.json());\n  return result;\n}\n\n// https://stackoverflow.com/questions/42947506/unsubscribe-from-a-topic-in-fcm-web\nexport function unsubscribeFromTopic(token: string, topic: string) {\n  const url = `https://iid.googleapis.com/iid/v1:batchRemove`;\n  const result = fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `key=${process.env.FIREBASE_SERVER_KEY}`\n    },\n    body: JSON.stringify({\n      to: `/topics/${topic}`,\n      registration_tokens: [token]\n    })\n  })\n  .then((res) => res.text());\n  return result;\n}\n\n/**\n * //Success example:\n * {\n *   \"message_id\": \"1023456\"\n * }\n *\n * //failure example:\n * {\n *   \"error\": \"TopicsMessageRateExceeded\"\n * }\n */\nexport async function sendMsgToTopic(msg: FirebaseMsg, topic: string) {\n  const url = `https://fcm.googleapis.com/fcm/send`;\n  const result = fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `key=${process.env.FIREBASE_SERVER_KEY}`\n    },\n    body: JSON.stringify({\n      to: `/topics/${topic}`,\n      // priority: 'high',\n      notification : msg\n    })\n  })\n  .then((res) => res.json());\n  return result;\n}\n\n\n/**\n * Send message to multiple topics\n */\nexport async function sendMsgToTopics(msg: FirebaseMsg, topics: string[]) {\n  const url: string = `https://fcm.googleapis.com/v1/projects/${process.env.FIREBASE_PROJECT_ID}/messages:send`;\n  const condition: string = topics\n    .reduce((acc, topic) => `|| '${topic}' in topics ` + acc, '')\n    .substr(3);\n  console.info(condition);\n  const accessToken = await getAccessTokenPromise();\n\n  const result = fetch(url, {\n    method: 'POST',\n    // headers: {\n    //   'Content-Type': 'application/json',\n    //   'Authorization': `key=${process.env.FIREBASE_SERVER_KEY}`\n    // },\n    headers: new Headers({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${accessToken}`\n    }),\n    body: JSON.stringify({\n      \"message\":{\n        \"condition\": condition,\n        \"notification\" : msg\n      }\n    })\n  })\n  .then((res) => res.json());\n  return result;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/custom-firebase/push-notification/topic.ts","// https://firebase.google.com/docs/web/setup\n// https://firebase.google.com/docs/cloud-messaging/js/topic-messaging\n// https://firebase.googleblog.com/2016/08/sending-notifications-between-android.html\n\n// https://stackoverflow.com/questions/38156239/how-to-set-the-content-type-of-request-header-when-using-fetch-api\n// https://stackoverflow.com/questions/30203044/using-an-authorization-header-with-fetch-in-react-native\n\nimport * as Firebase from 'firebase/app';\nimport 'firebase/messaging';\nimport { FirebaseConfig, getServiceAccountInfo } from '../index';\n\nconst google = require('googleapis');\n\n/**\n * Setup Firebase Real-time database\n * @param config {FirebaseConfig} the firebase config\n * @return {Messaging} the firebase database\n */\nexport function setupMessaging(config: FirebaseConfig) {\n  if (Firebase.apps.length === 0) {\n    console.log(config);\n    Firebase.initializeApp(config);\n  }\n  return Firebase.messaging();\n}\n\n// https://firebase.google.com/docs/cloud-messaging/auth-server\nconst SCOPES = 'https://www.googleapis.com/auth/firebase.messaging';\n\nexport function getAccessTokenPromise(): Promise<any> {\n  return new Promise(function(resolve, reject) {\n    const key = getServiceAccountInfo();\n    const jwtClient = new google.auth.JWT(\n      key.client_email,\n      undefined, // null,\n      key.private_key,\n      SCOPES,\n      undefined, // null\n    );\n    jwtClient.authorize(function(err: any, tokens: any) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      console.log('fuck');\n      console.log(tokens);\n      resolve(tokens.access_token);\n    });\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/custom-firebase/push-notification/utils.ts","import { Observable } from 'rxjs/Rx';\n\nimport * as pushNotification from '../custom-firebase/push-notification/device-group';\n\n/**\n * Create Observable for adding token to a the user's device group\n * and creating notification key for a user's group.\n * It doesn't matter a device group already exists or not,\n * notification key changes all the time\n * @param record {TokenRecord} user's token record\n * @returns {Observable} the Observable\n */\nexport function createNotificationKeyStream(record: TokenRecord) {\n  return Observable\n    .fromPromise(pushNotification.addToken(record))\n    .do((result: any) => {\n      console.info(`[notificationKey/createNotificationKeyStream]: created notification key (${result.notification_key})`)\n    });\n}\n\nexport function retrieveNotificationKeyStream(record: TokenRecord) {\n  return Observable\n    .fromPromise(pushNotification.retrieveNotificationKey(record))\n    .do((result: any) => {\n      console.info(`[notificationKey/retrieveNotificationKey]: retrieved notification key ${result}`)\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/utils/notificationKey.ts","module.exports = require(\"isomorphic-fetch\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"isomorphic-fetch\"\n// module id = 11\n// module chunks = 0","module.exports = require(\"bcrypt-nodejs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bcrypt-nodejs\"\n// module id = 12\n// module chunks = 0","module.exports = require(\"jsonwebtoken\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jsonwebtoken\"\n// module id = 13\n// module chunks = 0","import { Observable } from 'rxjs/Rx';\n\nimport sendNotification from '../custom-firebase/push-notification/individual-device';\n\nexport declare interface DirectMsg {\n  title: string;\n  message: string;\n  token: string;\n  type: TokenType;\n}\n\nexport default function directMessageStream (data: DirectMsg): Observable<any> {\n  const customMessage: FirebaseMsg = {\n    title: data.title,\n    body: data.message,\n  };\n  const stream = Observable\n    .fromPromise(sendNotification(<TokenType>data.type, data.token, customMessage))\n    .map((result: any) =>\n      ({\n        status: 'success',\n        msg: `message sent to token ${data.token}`,\n        perf: result\n      })\n    );\n  return stream;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/utils/directMessage.ts","import { Application, Request, Response, NextFunction } from 'express';\nimport { Observable } from 'rxjs/Rx';\n\nimport changeLang from './api/change-lang';\nimport * as User from './api/database/controllers/UserController';\n\nimport * as jwt from 'jsonwebtoken';\nimport deviceGroupRoutes from './api/device-group';\nimport directMsgRoutes from './api/direct-message';\nimport topicRoutes from './api/topic-op';\nimport tokenRoutes from './api/token-op';\n\nimport performanceTest from './api/performance-test';\n\n// verifyAuthToken\n// -1 no token provided\n// 1 ok\n// -1 failed to authenticate token\nexport async function verifyAuthToken(req: Request) {\n  const token: string = <string>(req.headers['x-access-token']);\n  if (!token) return -1;\n\n  const jwtPromise = new Promise((resolve, reject) => {\n    jwt.verify(token, process.env.JWT_SECRET, (err: any, decoded: any) => {\n      if (err) resolve(-1);\n      resolve(1);\n    })\n  });\n};\n\n\nexport default function apiRoutes(app: Application): void {\n\n  app.use(async (req: Request, res: Response, next: NextFunction) => {\n    // if (<string>(req.url).startsWith('/user/') || <string>(req.url).startsWith('/api/')) {\n\t\tif ((req.url.indexOf('/user/') >= 0 ||\n\t\t\treq.url.indexOf('/api/') >= 0) &&\n\t\t\treq.url.indexOf('/user/login') < 0 &&\n\t\t\treq.url.indexOf('/user/signup') < 0) {\n      // verify token\n      console.log('verifying token');\n      const token: string = <string>(req.headers['x-access-token']);\n      if (!token) return res.status(401).send({ auth: false, message: 'No token provided.' });\n\n      const result = await new Promise((resolve, reject) => {\n        jwt.verify(token, process.env.JWT_SECRET, function(err: any, decoded: any) {\n          if (err) resolve(false);\n\n          // res.status(200).send(decoded);\n          // res.status(200).send({ auth: true, message: 'Authenticated with token.' });\n          resolve(true);\n        });\n      });\n      console.log('finishing verifying token');\n      if (result) {\n        next();\n      } else {\n        return res.status(500).send({ auth: false, message: 'Failed to authenticate token.' });\n      }\n    } else {\n      next();\n    }\n  });\n\n\n  // Device-Group-related API\n  deviceGroupRoutes(app);\n\n  /*\n   * Handles /api/device-group/change-lang\n   * changes chosen language of a language to another\n   */\n  app.post('/api/device-group/change-lang', (req: Request, res: Response, next: NextFunction) => {\n    changeLang(req, res, next);\n  });\n\n  // Direct-Message-related API\n  directMsgRoutes(app);\n\n  // Topic-related API\n  topicRoutes(app);\n\n  // Token-related API\n  tokenRoutes(app);\n\n  app.get('/performance-test/:time', (req: Request, res: Response, next: NextFunction) => {\n    // const msg: FirebaseMsg = {\n    //   title: 'Test',\n    //   body: 'Message'\n    // };\n\n    const tmp = {\n      title: 'Test',\n      message: 'Message',\n      token: 'fBFtm56fJoY:APA91bEwS3k9R0y30QoosOyPuugzr0ee-OihYE3-N9p1TL-K4aX3r4WQdD2oMAu2wDqGQIWfWYOomZ3Ad4ChbGAupfhREH42erfvAuOgOWmNaJxg0XH6W6ZDOMJZnaR_CEG9jTaxofJQ',\n      type: <TokenType>'web'\n    };\n\n    performanceTest(tmp, parseInt(req.params.time), req, res, next);\n  });\n\n  /********************\n   * User-related API *\n   ********************/\n  app.post('/user/signup', (req: Request, res: Response, next: NextFunction) => {\n    User.signupUserHandler(req, res, next);\n  });\n\n  app.get('/user/check/:userId', (req: Request, res: Response, next: NextFunction) => {\n    User.checkUserHandler(req.params.userId, req, res, next);\n  });\n\n  app.post('/user/login', (req: Request, res: Response, next: NextFunction) => {\n    User.loginHandler(req, res, next);\n  });\n\n  app.post('/user/auth', (req: Request, res: Response, next: NextFunction) => {\n    User.authHandler(req, res, next);\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/entry-api.ts","import { Application, Request, Response, NextFunction } from 'express';\nimport * as DeviceGroup from './database/controllers/DeviceGroupController';\nimport * as Token from './database/controllers/TokenController';\nimport { Observable, Observer } from 'rxjs/Rx';\n// import * as userGroups from './custom-firebase/database/userGroups';\n\nimport { addTokenStream, removeTokenStream } from './utils/saveToken';\n\nimport * as utils from './utils';\n\nexport function addAndRemoveToken(tokenInfo: TokenRecord, targetLang: LangType) {\n  const record: TokenRecord = {\n    type: tokenInfo.type,\n    token: tokenInfo.token,\n    userId: tokenInfo.userId,\n    lang: tokenInfo.lang\n  };\n\n  const addStream = addTokenStream({\n      ...record,\n      lang: targetLang\n    })\n    .do((result: any) => {\n      console.info(`[Change Lang]: added token to ${targetLang} and subscribed to the right topic`);\n    });\n\n  const removeStream = removeTokenStream(record)\n    .do((result: any) => {\n      console.info(`[Change Lang]: removed token from ${tokenInfo.lang} and unsubscribed from the right topic`);\n    });\n\n  return Observable.concat(removeStream, addStream).last();\n}\n\n/**\n * Loop through a list of device groups and find if a token exists inside\n * Note that it'll only find one even if the token is in multiple device groups\n * @param token {string} the token\n * @param deviceGroups {string[]} the list of deviceGroups\n * @returns {Observable<any>} the observable\n */\nexport function checkTokenFromDeviceGroupStream(token: string, deviceGroups: string[]): Observable<any> {\n  // find the device group the token belongs to\n  // for each deviceGroup\n  const streams = deviceGroups.map((deviceGroup) => DeviceGroup.checkTokenFromDeviceGroupStream(token, deviceGroup));\n  const stream = Observable.merge(...streams)\n    .filter((result: any) => result.found)\n    // supposedly only one device group has that token\n    .reduce((acc, curr: any) => {\n      if (curr.found) return curr.deviceGroup;\n      return acc;\n    }, '');\n  return stream;\n}\n\n/**\n * Handles /api/device-group/change-lang\n * @param deviceGroup {string} the device group name\n * @param req {Request} request\n * @param res {Response} response\n * @param next {Next} next\n */\nexport default function changeLang(req: Request, res: Response, next: NextFunction): void {\n  const { userId, token, targetLang }: ChangeLangType = req.body;\n\n  const langKey = utils.getLangKey(targetLang);\n  const targetGroupName = utils.getDeviceGroupName(userId, targetLang);\n  const targetTopicName = utils.getBroadcastTopicName(targetLang);\n\n  let originalGroupName: string;\n  let tokenInfo: any;\n\n  const stream = Token.queryTokenStream(token)\n    .do((res: any) => {\n      console.info(`[Change Lang]: queried token info`);\n      tokenInfo = res;\n    })\n    .flatMap((result) => DeviceGroup.queryDeviceGroupStream(userId))\n    .do((res: any) =>{ console.info(`[Change Lang]: queried device groups`); })\n    .flatMap((result: Array<string>) => {\n      // find the device group the token belongs to\n      if (result.length > 0) {\n        return checkTokenFromDeviceGroupStream(token, result);\n      }\n      return Observable.throw('Original Device Group Not Found');\n    })\n    .do((result: string) => {\n      console.info(`[Change Lang]: found matched device group: ${result}`);\n      originalGroupName = result;\n    })\n    .flatMap((res: any) => addAndRemoveToken(tokenInfo, targetLang))\n    .flatMap((result: any) => Token.saveTokenStream({\n        type: tokenInfo.type,\n        lang: targetLang,\n        token: tokenInfo.token,\n        userId: tokenInfo.userId\n      })\n    )\n    .do((result: any) => { console.info(`[Change Lang]: saved token to database`); })\n    .map((result: any) => ({\n        status: 'success',\n        msg: `Device Group changed from ${originalGroupName} to ${targetGroupName}`\n      })\n    );\n\n  utils.handler(stream, req, res, next);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/change-lang.ts","import * as mongoose from 'mongoose';\n\nexport type DeviceGroupModel = mongoose.Document & {\n  deviceGroup: string,\n  userId: string,\n  tokens: Array<string>\n};\n\nconst deviceGroupSchema = new mongoose.Schema({\n  deviceGroup: String,\n  userId: String,\n  tokens: [String]\n}, { timestamps: true });\n\nconst DeviceGroup = mongoose.model('DeviceGroup', deviceGroupSchema);\nexport default DeviceGroup;\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/database/models/DeviceGroup.ts","import * as mongoose from 'mongoose';\n\nexport type TokenModel = mongoose.Document & {\n  userId: string,\n  token: string,\n  lang: string,\n  type: string\n};\n\nconst tokenSchema = new mongoose.Schema({\n  userId: String,\n  token: String,\n  lang: String,\n  type: String\n}, { timestamps: true });\n\nconst Token = mongoose.model('Token', tokenSchema);\nexport default Token;\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/database/models/Token.ts","import { Observable } from 'rxjs/Rx';\n\nimport * as topics from '../custom-firebase/push-notification/topic';\n\n/**\n * Create Observable for subscribing token to a topic\n * @param token {string} user's token\n * @param topicName {string} topic name\n * @returns {Observable} the Observable\n */\nexport function subscribeTopicStream(\n  token: string, topicName: string): Observable<any> {\n\n  return Observable.fromPromise(topics.subscribeTokenToTopic(token, topicName));\n  // TODO: save result to database\n}\n\n/**\n * Create Observable for unsubscribing token from a topic\n * @param token {string} user's token\n * @param topicName {string} topic name\n * @returns {Observable} the Observable\n */\nexport function unsubscribeTopicStream(\n  token: string, topicName: string): Observable<any> {\n\n  return Observable.fromPromise(topics.unsubscribeFromTopic(token, topicName));\n  // TODO: remove result from database\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/utils/topicSubscription.ts","module.exports = require(\"firebase/app\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"firebase/app\"\n// module id = 20\n// module chunks = 0","export interface FirebaseConfig {\n  apiKey: string;\n  authDomain: string;\n  databaseURL: string;\n  projectId: string;\n  storageBucket: string;\n  messagingSenderId: string;\n}\n\nexport function getConfig() {\n  return {\n    apiKey: process.env.FIREBASE_API_KEY,\n    authDomain: process.env.FIREBASE_DOMAIN_KEY,\n    databaseURL: process.env.FIREBASE_DATABASE_URL,\n    projectId: process.env.FIREBASE_PROJECT_ID,\n    storageBucket: process.env.FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID\n  };\n}\n\nexport function getServiceAccountInfo() {\n  return {\n    \"type\": \"service_account\",\n    \"project_id\": \"kevchat-a5b6f\",\n    \"private_key_id\": \"dc4806e84c1c43064e683884b9e62a2bb12e3319\",\n    \"private_key\": \"-----BEGIN PRIVATE KEY-----\\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDU4J75tKyjWSQX\\nWL4qww8i6xW51NTEdxxZXmYt3WuYpCpfFzpYU40KggPsTGl55cqzoOY3Py7g1mjm\\nbTwCAujc7w2ceQnoAodZmQy9V8q3ygb+1rtNjjQF0SIAN3eoYbrXBfNYAhlrZS3G\\n8mTJdvbsBsfYXn+NbazXzIvEuI2RZyRZkMtLNd+LklCfF9dIGX9Z/hyRIikqYt49\\npanK8iTBI/ux6W62RPIfpuPWvUCdabVOJTfZ19qJLsi3S5kzqRTwzeTFU+fa3SUv\\n9cUBdnmWEgfmWo9I8/6s+Hdt5R+QkrrMgfn0DOd0HD5x5zkwAdS+Sk87eVCOtUny\\nb9zlofFNAgMBAAECggEAXFJwT95eEte5kdCAZN5EpcGrofTeM7humImaqeCB5eio\\noaXavWy62ehKGESJZ/7TOrUYsrQZuhPy2aBdKoglgo/AaPCLbc4O8jowrrsw5SVe\\nhE4PXFLEWBN7efmUUPfVhqSDhVMfwBZY1JPSRxdrfjBwonNVQTpkABErOq1JZFm6\\nt2qHNFDMspwhYrbChYZN9Ijbvpv64XiejYM/rP/+Dpb5o1LwpyL6vJ8Z0xj9g65l\\ncQZcITXgdi+lQDzbCR9sQ+2n/xlMiutFTsFqhL6giuQcNU/eD0l6wp4wPj8PqRMr\\n3fLgPdErdTlB7rYPo1No3fuGAoz8yo9UpwLykjhCdwKBgQD3EmrJ6CHueyNqj7ek\\nlHivjdSbyxjCeMwur5M1w+dqKBwDXAOtQ+sBm0IZ8fZHLCxJFhlAM6ejlCZiF0O2\\nij2r2lr4X8/IW2ESeOTXJx8mvuLIA0T7865GupLM6hYoztodVTUsdv3uTz2/wmlR\\nPWZecz7TTVd6QvPfsaOtY2wccwKBgQDckeGkP2D6XDSo538G1vtlD+aK+EDA4XcN\\nmrXrLHbaMFxwjr5/w0g14h3x6gxIJwvGe5d2CwVk4zUEcihO1d+tfgePr4vKiuAp\\nKQGrO0bu0FC9smIN/1GUjHYhzIqUWHeryA8CQQTbHs0OVm5hIfhKW7RGPl24oZBK\\nC7I8XnoLPwKBgQCVhEOzpBLEqygnmIldw6u1MXN0RFfbeBa4OfAwHTmx+EvbjJd9\\nBxj0g+xgnxiWwZibMhBd1eShDUqdGc8UbFwd36olnHW1nfcEorx5p2cmn2XF/JSG\\nlFTm4IluEEsQrv03uxTOr8PDr5iCrzfkve9xQPTIEonZpyLGQE34463NGQKBgFkb\\nZjjgkeES1wNVYm/08eLGJbEG0cIaU+pfEhdMA0fqOa4PPM6Iqed6zfYpQ4TyoUMy\\nMuIxWaCEWarOI5KVvKNuQse9d4//wsdeFZqDfAiGh9fa9NoKx35nsGG/LEz54H65\\nd7bFZZzQOK8OI9GB07jWi2HFWD96pbwENaFF2bApAoGBANUnVJxW0fJMh/9sYwQH\\nmedP7aV7nLIFdG988p53wdvQN7CF40wCOckvW/bG/I83a7dibSj274EYSIa1deWb\\nCWS+UsiNqMKgQgtzk4Id4AmLF0AVksJKH36+cP2PLexNdocL4Ku9T71IqsZn0JvC\\nWaIK9klqvoH0aLg5XOJw5Zyg\\n-----END PRIVATE KEY-----\\n\",\n    \"client_email\": \"firebase-adminsdk-7fhc2@kevchat-a5b6f.iam.gserviceaccount.com\",\n    \"client_id\": \"112694782557192835677\",\n    \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n    \"token_uri\": \"https://accounts.google.com/o/oauth2/token\",\n    \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n    \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-7fhc2%40kevchat-a5b6f.iam.gserviceaccount.com\"\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/custom-firebase/index.ts","module.exports = require(\"googleapis\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"googleapis\"\n// module id = 22\n// module chunks = 0","import { Application, Request, Response, NextFunction } from 'express';\nimport User from '../models/User';\nimport * as jwt from 'jsonwebtoken';\nimport * as crypto from 'crypto';\nimport * as bcrypt from 'bcrypt-nodejs';\n\nexport function signupUserHandler(req: Request, res: Response, next: NextFunction) {\n  const user = new User({\n    userId: req.body.userId,\n    password: req.body.password\n  });\n\n  User.findOne({ userId: req.body.userId }, (err, existingUser) => {\n    if (err) {\n      res.send({ status: 'failure', msg: 'database error'});\n    }\n    if (existingUser) {\n      res.send({ status: 'failure', msg: `Account with that userId ${req.body.userId} already exists.`});\n      return;\n    }\n    user.save((err) => {\n      if (err) { return next(err); }\n      const token = jwt.sign({ id: user._id }, 'linkinpark', {\n        expiresIn: 86400 // expires in 24 hours\n      });\n      res\n        // .cookie('iceicebaby' , JSON.stringify({ userId: req.body.userId, authToken: token }))\n        .send({ status: 'success', auth: true, token });\n    });\n  });\n}\n\nexport function loginHandler(req: Request, res: Response, next: NextFunction) {\n  User.findOne({ userId: req.body.userId }, (err: any, user: any) => {\n    if (err) return res.status(500).send('Error on the server.');\n    if (!user) return res.status(404).send('No user found.');\n    var passwordIsValid = bcrypt.compareSync(req.body.password, user.password);\n    if (!passwordIsValid) return res.status(401).send({ auth: false, token: null });\n    const token = jwt.sign({ id: user._id }, 'linkinpark', {\n      expiresIn: 86400 // expires in 24 hours\n    });\n    res\n      // .cookie('iceicebaby' , JSON.stringify({ userId: req.body.userId, authToken: token }))\n      .status(200)\n      .send({ auth: true, token: token });\n  });\n}\n\nexport function authHandler(req: Request, res: Response, next: NextFunction) {\n  const token: string = <string>(req.headers['x-access-token']);\n  if (!token) return res.status(401).send({ auth: false, message: 'No token provided.' });\n\n  jwt.verify(token, 'linkinpark', function(err: any, decoded: any) {\n    if (err) return res.status(500).send({ auth: false, message: 'Failed to authenticate token.' });\n\n    res.status(200).send({ auth: true, message: 'Authenticated with token!', decoded });\n  });\n}\n\nexport function checkUserHandler(userId: string, req: Request, res: Response, next: NextFunction) {\n  User.findOne({ userId }, (err, existingUser) => {\n    if (err) { return next(err); }\n    if (existingUser) {\n      res.send({ status: 'found', msg: 'Account with that user id already exists.'});\n    } else {\n      res.send({ status: 'not found', msg: 'Account with that user id is available.'});\n    }\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/database/controllers/UserController.ts","import * as bcrypt from 'bcrypt-nodejs';\nimport * as crypto from 'crypto';\nimport * as mongoose from 'mongoose';\n\nexport type UserModel = mongoose.Document & {\n  userId: string,\n  password: string,\n\n  comparePassword: (password: string, cb: (err: any, isMatch: any) => {}) => void\n};\n\nconst userSchema = new mongoose.Schema({\n  userId: String,\n  password: String\n}, { timestamps: true });\n\n/**\n * User hash middleware\n */\nuserSchema.pre('save', function save(next) {\n  const user = this;\n  if (!user.isModified('password')) { return next(); }\n  bcrypt.genSalt(10, (err, salt) => {\n    if (err) { return next(err); }\n    bcrypt.hash(user.password, salt, undefined, (err: mongoose.Error, hash) => {\n      if (err) { return next(err); }\n      user.password = hash;\n      next();\n    });\n  });\n});\n\nuserSchema.methods.comparePassword = function (password: string, cb: (err: any, isMatch: any) => {}) {\n  bcrypt.compare(password, this.password, (err: mongoose.Error, isMatch: boolean) => {\n    cb(err, isMatch);\n  });\n};\n\nconst User = mongoose.model('User', userSchema);\nexport default User;\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/database/models/User.ts","import { Application, Request, Response, NextFunction } from 'express';\nimport { Observable } from 'rxjs/Rx';\nimport * as DeviceGroup from './database/controllers/DeviceGroupController';\nimport * as Token from './database/controllers/TokenController';\nimport * as pushNotification from './custom-firebase/push-notification/device-group';\n\nimport * as utils from './utils';\nimport sendCustomMsgStream, { CustomMsg } from './utils/sendDeviceGroup';\n\n/**\n * Handles /api/device-group/groups/:userId\n * @param userId {string} User ID\n * @param req {Request} request\n * @param res {Response} response\n * @param next {Next} next\n */\nexport function queryDeviceGroup(\n  userId: string,\n  req: Request, res: Response, next: NextFunction): void {\n\n  utils.handler(DeviceGroup.queryDeviceGroupStream(userId), req, res, next);\n}\n\n/**\n * Handles /api/device-group/tokens/:userId/:lang\n * @param deviceGroup {string} the device group name\n * @param req {Request} request\n * @param res {Response} response\n * @param next {Next} next\n */\nexport function queryTokenList(\n  deviceGroup: string,\n  req: Request, res: Response, next: NextFunction): void {\n\n  utils.handler(DeviceGroup.queryTokenListFromDeviceGroupStream(deviceGroup), req, res, next);\n}\n\n/**\n * Handles /api/custom-message\n * @param data {CustomMsg} data that contains userId, title, message, lang\n * @param req {Request} request\n * @param res {Response} response\n * @param next {Next} next\n */\nexport function customMsgHandler (data: CustomMsg, req: Request, res: Response, next: NextFunction): void {\n  utils.handler(sendCustomMsgStream(data), req, res, next);\n}\n\nexport default function deviceGroupRoutes(app: Application) {\n  app.get('/api/device-group/groups/:userId',\n    (req: Request, res: Response, next: NextFunction) => {\n    queryDeviceGroup(req.params.userId, req, res, next);\n  });\n\n  app.get('/api/device-group/tokens/:userId/:lang', (req: Request, res: Response, next: NextFunction) => {\n    const langKey = req.params.lang === 'zh-hk' ? 'zh_hk' : 'en';\n    const deviceGroup = req.params.userId + '_' + langKey;\n    queryTokenList(deviceGroup, req, res, next);\n  });\n\n  app.post('/api/custom-message',\n    (req: Request, res: Response, next: NextFunction): void => {\n    customMsgHandler(<CustomMsg>(req.body), req, res, next);\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/device-group.ts","import { Observable } from 'rxjs/Rx';\n\nimport * as pushNotification from '../custom-firebase/push-notification/device-group';\nimport { retrieveNotificationKeyStream } from './notificationKey';\n\n\nexport declare interface CustomMsg {\n  userId: string;\n  title: string;\n  message: string;\n  lang: LangType;\n}\n\n/**\n * Create Observable that sends a custom message to a device group\n * @param data {CustomMsg} data that contains userId, title, message, lang\n * @returns {Observable} the observable\n */\nexport default function sendCustomMsgStream(data: CustomMsg) {\n  const customMessage: FirebaseMsg = {\n    title: data.title,\n    body: data.message\n  };\n\n  const record: Partial<TokenRecord> = {\n    userId: data.userId,\n    lang: data.lang\n  };\n\n  return retrieveNotificationKeyStream(<TokenRecord>record)\n    .flatMap((notificationId: string) =>\n      Observable.fromPromise(pushNotification.sendNotification(notificationId, customMessage)))\n    .do((result: any) => {\n      console.info(`[sendDeviceGroupStream]: sent message to ${data.userId} ${data.lang}`);\n    })\n    .map((result: any) => ({\n      ...result,\n      status: 'success'\n    }));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/utils/sendDeviceGroup.ts","import { Application, Request, Response, NextFunction } from 'express';\n\nimport { handler } from './utils';\nimport directMessageStream, { DirectMsg } from './utils/directMessage';\n\n/**\n * Sends a direct message through a token\n * @param data {DirectMsg} data\n * @param req {Request} the Request\n * @param res {Response} the Response\n * @param next {Next} the Next\n */\nexport function directMsgHandler (data: DirectMsg, req: Request, res: Response, next: NextFunction): void {\n  const stream = directMessageStream(data)\n  handler(stream, req, res, next);\n}\n\nexport default function directMsgRoutes(app: Application) {\n  app.post('/api/direct-message', (req: Request, res: Response, next: NextFunction) => {\n    directMsgHandler(<DirectMsg>req.body, req, res, next);\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/direct-message.ts","// https://firebase.google.com/docs/web/setup\n// https://firebase.google.com/docs/cloud-messaging/js/topic-messaging\n// https://firebase.googleblog.com/2016/08/sending-notifications-between-android.html\n\n// https://stackoverflow.com/questions/38156239/how-to-set-the-content-type-of-request-header-when-using-fetch-api\n// https://stackoverflow.com/questions/30203044/using-an-authorization-header-with-fetch-in-react-native\n\nimport * as Firebase from 'firebase/app';\nimport 'firebase/messaging';\nimport { getAccessTokenPromise } from './utils';\n\nimport * as fetch from 'isomorphic-fetch';\n\nconst { performance } = require('perf_hooks');\n\nfunction clock(start?: any): any {\n  if ( !start ) return process.hrtime();\n  let end: number[] = process.hrtime(start);\n  return Math.round((end[0]*1000) + (end[1]/1000000));\n}\n\nclass Benchmark {\n\n    private start = process.hrtime();\n\n    public elapsed(): number {\n        const end = process.hrtime(this.start);\n        return Math.round((end[0] * 1000) + (end[1] / 1000000));\n    }\n}\n\n/**\n * Send web push notification to an individual user device\n * @param token {string} the token belong to that device\n * @param msg {FirebaseMsg} the message\n */\nexport async function sendWebNotification(token: string, msg: FirebaseMsg) {\n  // const startTime = clock();\n  // const benchmark = new Benchmark();\n  const startTime = performance.now();\n  const accessToken = await getAccessTokenPromise();\n  // console.log(accessToken);\n  const result = fetch(process.env.FIREBASE_PUSH_NOTIFICATION_WEB, {\n    method: 'POST',\n    headers: new Headers({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${accessToken}`\n    }),\n    body: JSON.stringify({\n      message: {\n        token : token,\n        notification : msg\n      }\n    })\n  })\n  .then((res) => res.json())\n  .then((result) => {\n    // console.log(result);\n    if (result.error) { throw new Error(result); }\n  })\n  .catch((err) => { console.error(err); });\n  // const duration: number = clock(startTime);\n  // const duration: number = benchmark.elapsed();\n  const duration = performance.now() - startTime;\n  console.log(duration);\n  return {\n    result,\n    duration\n  };\n}\n\n/**\n * Send Android push notification to an individual user device\n * @param token {string} the token belong to that device\n * @param msg {FirebaseMsg} the message\n */\nexport async function sendAndroidNotification(token: string, msg: FirebaseMsg) {\n  // TODO:\n  return 'foo';\n}\n\n/**\n * Send iOS push notification to an individual user device\n * @param token {string} the token belong to that device\n * @param msg {FirebaseMsg} the message\n */\nexport async function sendIOSNotification(token: string, msg: FirebaseMsg) {\n  // TODO:\n  return 'foo';\n}\n\n/**\n * Send push notification to an individual user device\n * @param type {TokenType} the type of the token according to platform\n * @param token {string} the token belong to that device\n * @param msg {FirebaseMsg} the message\n */\nexport default async function sendNotification(type: TokenType, token: string, msg: FirebaseMsg): Promise<any> {\n  switch (type) {\n    case 'web':\n      return await sendWebNotification(token, msg);\n    case 'android':\n      return await sendAndroidNotification(token, msg);\n    case 'ios':\n      return await sendIOSNotification(token, msg);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/custom-firebase/push-notification/individual-device.ts","module.exports = require(\"perf_hooks\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"perf_hooks\"\n// module id = 29\n// module chunks = 0","import { Application, Request, Response, NextFunction } from 'express';\nimport { Observable } from 'rxjs/Rx';\n\nimport * as utils from './utils';\nimport { sendTopicStream, sendTopicsStream }  from './utils/sendTopic';\n\ndeclare interface TopicMsg {\n  topic: string,\n  msg: FirebaseMsg\n}\n\ndeclare interface TopicsMsg {\n  topics: string[];\n  msg: FirebaseMsg;\n}\n\ndeclare interface BroadcastMsg {\n  lang: string,\n  msg: FirebaseMsg\n}\n\n/**\n * Send a message to a specific topic,\n * @param data {TopicMsg} messages to be sent and topic name\n * @param req {Request} request\n * @param res {Response} response\n * @param next {Next} next\n */\nexport function sendTopicMsg(\n  data: TopicMsg,\n  req: Request, res: Response, next: NextFunction): void {\n  utils.handler(sendTopicStream\n    (data.msg, data.topic), req, res, next);\n}\n\nexport function sendMultiTopics(\n  data: TopicsMsg,\n  req: Request, res: Response, next: NextFunction): void {\n  utils.handler(sendTopicsStream\n    (data.msg, data.topics), req, res, next);\n}\n\n/**\n * Send a broadcast message to every device via the `broadcast_XXX` topic,\n * the message will be in device's chosen language\n * @param data {BroadcastMsg[]} messages to be sent\n * @param req {Request} request\n * @param res {Response} response\n * @param next {Next} next\n */\nexport function sendBroadcastMsg(\n  data: BroadcastMsg[],\n  req: Request, res: Response, next: NextFunction): void {\n\n  const streams = data.map((item) => ({\n    topic: utils.getBroadcastTopicName(<LangType>item.lang),\n    msg: item.msg\n  }))\n  .map((data: TopicMsg) => sendTopicStream(data.msg, data.topic));\n\n  const stream = Observable.merge(...streams)\n    .reduce((acc: string, curr: string) => { return acc + curr }, '');\n\n  utils.handler(stream, req, res, next);\n}\n\n/**\n * Send a welcome message to every device via the `broadcast_XXX` topic,\n * the welcome message will be in device's chosen language\n * @param req {Request} request\n * @param res {Response} response\n * @param next {Next} next\n */\nexport function sendWelcomeMsg(req: Request, res: Response, next: NextFunction): void {\n  const topicKeys: Array<BroadcastMsg> = [\n    {lang: 'en', msg: { title: 'Welcome', body: 'Welcome to Ice Ice Baby' } },\n    {lang: 'zh-hk', msg: { title: '你好', body: '歡迎加入Ice Ice Baby' } }\n  ];\n  sendBroadcastMsg(topicKeys, req, res, next);\n}\n\n/**\n * Send a custom message to the `test` topic, every device will receive the message\n * @param req {Request} request\n * @param res {Response} response\n * @param next {Next} next\n */\nexport function sendTestMessage(req: Request, res: Response, next: NextFunction): void {\n  const msg: FirebaseMsg = req.body;\n  utils.handler(sendTopicStream(msg, 'test'), req, res, next);\n}\n\nexport function subscribeToTopic() {\n\n}\n\nexport function unsubscribeFromTopic() {\n\n}\n\nexport default function topicRoutes(app: Application): void {\n  app.post('/api/topic-message',\n    (req: Request, res: Response, next: NextFunction): void => {\n    sendTopicMsg(<TopicMsg>req.body, req, res, next);\n  });\n\n  app.post('/api/multi-topics',\n    (req: Request, res: Response, next: NextFunction): void => {\n    sendMultiTopics(<TopicsMsg>req.body, req, res, next);\n  });\n\n  app.post('/api/broadcast-message',\n    (req: Request, res: Response, next: NextFunction): void => {\n    sendBroadcastMsg(<Array<BroadcastMsg>>req.body, req, res, next);\n  });\n\n  app.post('/api/welcome-message',\n    (req: Request, res: Response, next: NextFunction): void => {\n    sendWelcomeMsg(req, res, next);\n  });\n\n  app.post('/api/test-message',\n    (req: Request, res: Response, next: NextFunction): void => {\n    sendTestMessage(req, res, next);\n  });\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/topic-op.ts","import { Observable } from 'rxjs/Rx';\n\nimport { sendMsgToTopic, sendMsgToTopics } from '../custom-firebase/push-notification/topic';\n\n/**\n * Create an Observable for sending message to a topic\n * @param msg {FirebaseMsg} messages to be sent\n * @param topic {string} the topic name\n */\nexport function sendTopicStream(msg: FirebaseMsg, topic: string): Observable<any> {\n  return Observable.fromPromise(sendMsgToTopic(msg, topic))\n    .do((res: any) => {\n      console.info(`[utils/sendTopicStream]: send msg to topic ${topic}`);\n    })\n    .flatMap((res: any) => {\n      if (res.error) { return Observable.throw('fail to send message'); }\n      return Observable.of('message sent');\n    })\n    .do((res: any) => {\n      console.info(`[utils/sendTopicStream]: successfully sent msg to topic ${topic}`);\n    });\n}\n\n\nexport function sendTopicsStream(msg: FirebaseMsg, topics: string[]): Observable<any> {\n  console.info('creating send topics stream');\n  console.info(topics);\n  return Observable.fromPromise(sendMsgToTopics(msg, topics))\n    .do((res: any) => {\n      console.info(`[utils/sendTopicsStream]: send msg to topics ${topics}`);\n    })\n    .flatMap((res: any) => {\n      console.log(res);\n      if (res.error) { return Observable.throw('fail to send message'); }\n      return Observable.of('message sent');\n    })\n    .do((res: any) => {\n      console.info(`[utils/sendTopicsStream]: successfully sent msg to topics ${topics}`);\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/utils/sendTopic.ts","import { Application, Request, Response, NextFunction } from 'express';\nimport { Observable } from 'rxjs/Rx';\n\nimport * as Token from './database/controllers/TokenController';\nimport * as utils from './utils';\n\nimport saveTokenStream from './utils/saveToken';\n\n/**\n * Retrieve all the tokens associated to the user from MongoDB\n * @param userId {string} user's id\n * @param req {Request} request\n * @param res {Response} response\n * @param next {Next} next\n */\nexport function retrieveTokens(userId: string,\n    req: Request, res: Response, next: NextFunction) {\n\n  utils.handler(Token.findTokensStream(userId), req, res, next);\n}\n\n/**\n * Register tokens to Firebase's device group and\n * Saves token to MongoDb along with the device group it's associated to\n * @param record {TokenRecord} user's token record\n * @param req {Request} request\n * @param res {Response} response\n * @param next {Next} next\n */\nexport function saveToken(\n    record: TokenRecord,\n    req: Request, res: Response, next: NextFunction): void {\n\n  utils.handler(saveTokenStream(record), req, res, next);\n}\n\nexport default function tokenRoutes(app: Application) {\n  app.post('/api/token', (req: Request, res: Response, next: NextFunction) => {\n    saveToken(<TokenRecord>req.body, req, res, next);\n  });\n\n  app.get('/api/tokens/:userId', (req: Request, res: Response, next: NextFunction) => {\n    retrieveTokens(req.params.userId, req, res, next);\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/token-op.ts","import { Application, Request, Response, NextFunction } from 'express';\nimport { Observable } from 'rxjs';\n\nimport { handler } from './utils';\nimport directMessageStream, { DirectMsg } from './utils/directMessage';\n\nimport * as fs from 'fs';\n\nexport declare interface DirectMsg {\n  title: string;\n  message: string;\n  token: string;\n  type: TokenType;\n}\n\n/**\n * Sends a direct message through a token\n * @param data {DirectMsg} data\n * @param req {Request} the Request\n * @param res {Response} the Response\n * @param next {Next} the Next\n */\nexport default function testPerformanceTest (data: DirectMsg, time: number, req: Request, res: Response, next: NextFunction): void {\n  let streams = [];\n  const performance: Array<any> = [];\n\n  for (let i = 0; i < time; i++) {\n    streams.push(directMessageStream(data));\n  }\n\n  const stream = Observable.merge(...streams);\n\n  const payload: Payload = {\n    status: 'success',\n    result: ''\n  };\n\n  res.send(JSON.stringify({status: 'success', 'msg': 'started'}));\n  console.log('performance test started');\n\n  stream.subscribe(\n    (result: any) => {\n      console.info(`sent ${performance.length + 1}th message`);\n      const prevTotal: number = performance.length >= 1 ? (performance[performance.length-1]).total : 0;\n      const total: number = result.perf.duration + prevTotal;\n      console.info(`took: ${result.perf.duration}, total: ${total}`);\n      performance.push({\n        duration: <number>result.perf.duration,\n        total\n      });\n      payload.result = result;\n    },\n    (err: any) => {\n      payload.status = 'failure';\n      payload.result = err;\n      // res.send(JSON.stringify(payload));\n    },\n    () => {\n      let file = fs.createWriteStream('./mika.txt');\n      file.on('error', function(err) { console.error(err); });\n      performance.forEach((v: any, idx: number) => { file.write(`idx: ${idx}, duration: ${v.duration}, totel: ${v.total}\\n`); });\n      file.end();\n      // res.send(JSON.stringify(payload));\n    }\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/performance-test.ts","module.exports = require(\"rxjs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs\"\n// module id = 34\n// module chunks = 0","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 35\n// module chunks = 0"],"sourceRoot":""}